on:
  workflow_dispatch:
    inputs:
      terragrunt_working_dir:
        description: 'terragrunt_working_dir'
        required: true
      terragrunt_cli_flags:
        description: 'terragrunt_working_dir'
        required: false
        default: |
          --terragrunt-include-dir "global/terraform/**/**" \
          --terragrunt-include-dir "global/iam/**/**" \
          --terragrunt-include-dir "global/secret/**/**"
          --terragrunt-include-dir "global/network/**/**" \
          --terragrunt-include-dir "us-central1/network/**/**" \
          --terragrunt-include-dir "global/data/**/**" \
          --terragrunt-include-dir "us-central1/data/**/**" \
          --terragrunt-include-dir "global/compute/**/**" \
          --terragrunt-include-dir "us-central1/compute/**/**"
      terragrunt_run_all_command:
        description: 'terragrunt_run_all_command'
        required: true
defaults:
  run:
    shell: bash
jobs:
  terragrunt:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: run checkout
      uses: actions/checkout@v2
    - id: setup_github_env
      name: run setup github env
      env:
        # secrets
        GCP_BILLING_ACCOUNT_ID: "${{ secrets.GCP_BILLING_ACCOUNT_ID }}"
        GCP_ORGANIZATION: "${{ secrets.GCP_ORGANIZATION }}"
        GCP_ORGANIZATION_ID: "${{ secrets.GCP_ORGANIZATION_ID }}"
        GCP_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"
        GCS_TERRAFORM_REMOTE_STATE_BUCKET: "${{ secrets.GCS_TERRAFORM_REMOTE_STATE_BUCKET }}"
        GCS_TERRAFORM_REMOTE_STATE_LOCATION: "${{ secrets.GCS_TERRAFORM_REMOTE_STATE_LOCATION }}"
        GCP_WORKSPACE_DOMAIN_NAME: "${{ secrets.GCP_WORKSPACE_DOMAIN_NAME }}"
        # inputs
        TERRAGRUNT_RUN_ALL_COMMAND: "${{ github.event.inputs.terragrunt_run_all_command }}"
        TERRAGRUNT_WORKING_DIR: "${{ github.workspace }}/${{ github.event.inputs.terragrunt_working_dir }}"
        TERRAGRUNT_CLI_FLAGS: "${{ github.event.inputs.terragrunt_cli_flags }}"
        # hardcoded
        HOME_BIN: "${{ github.workspace }}/bin"
        TF_INPUT: false
        TF_IN_AUTOMATION: true
        TF_PROVIDER_KUSTOMIZATION_VERSION: 0.4.3
      run: |
        echo "GCP_BILLING_ACCOUNT_ID=$GCP_BILLING_ACCOUNT_ID" >> "${GITHUB_ENV}"
        echo "GCP_ORGANIZATION=$GCP_ORGANIZATION" >> "${GITHUB_ENV}"
        echo "GCP_ORGANIZATION_ID=$GCP_ORGANIZATION_ID" >> "${GITHUB_ENV}"
        echo "GCP_PROJECT_ID=$GCP_PROJECT_ID" >> "${GITHUB_ENV}"
        echo "GCS_TERRAFORM_REMOTE_STATE_BUCKET=$GCS_TERRAFORM_REMOTE_STATE_BUCKET" >> "${GITHUB_ENV}"
        echo "GCS_TERRAFORM_REMOTE_STATE_LOCATION=$GCS_TERRAFORM_REMOTE_STATE_LOCATION" >> "${GITHUB_ENV}"
        echo "GCP_WORKSPACE_DOMAIN_NAME=$GCP_WORKSPACE_DOMAIN_NAME" >> "${GITHUB_ENV}"
        echo "TERRAFORM=$TERRAFORM" >> "${GITHUB_ENV}"
        echo "IAM=$IAM" >> "${GITHUB_ENV}"
        echo "SECRET=$SECRET" >> "${GITHUB_ENV}"
        echo "NETWORK=$NETWORK" >> "${GITHUB_ENV}"
        echo "DATA=$DATA" >> "${GITHUB_ENV}"
        echo "COMPUTE=$COMPUTE" >> "${GITHUB_ENV}"
        echo "TERRAGRUNT_RUN_ALL_COMMAND=$TERRAGRUNT_RUN_ALL_COMMAND" >> "${GITHUB_ENV}"
        echo "TERRAGRUNT_WORKING_DIR=$TERRAGRUNT_WORKING_DIR" >> "${GITHUB_ENV}"
        echo "HOME_BIN=$HOME_BIN" >> "${GITHUB_ENV}"
        echo "TF_INPUT=$TF_INPUT" >> "${GITHUB_ENV}"
        echo "TF_IN_AUTOMATION=$TF_IN_AUTOMATION" >> "${GITHUB_ENV}"
        echo "TF_PROVIDER_KUSTOMIZATION_VERSION=$TF_PROVIDER_KUSTOMIZATION_VERSION" >> "${GITHUB_ENV}"
    - id: setup_github_path
      name: run setup github path
      run: |
        mkdir -p "${HOME_BIN}"
        echo "${HOME_BIN}" >> "${GITHUB_PATH}"
    - id: meta_linter
      name: run meta linter
      # You can override Mega-Linter flavor used to have faster performances
      # More info at https://nvuillam.github.io/mega-linter/flavors/
      uses: nvuillam/mega-linter@v4
      env:
        # All available variables are described in documentation
        # https://nvuillam.github.io/mega-linter/configuration/
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - id: setup_gcloud
      name: run setup gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
    - id: setup_tfenv
      name: run setup tfenv
      working-directory: ./bash/terraform
      run: |
        chmod +x ./setup_tfenv.sh
        ./setup_tfenv.sh
    - id: setup_tgenv
      name: run setup tgenv
      working-directory: ./bash/terragrunt
      run: |
        chmod +x ./setup_tgenv.sh
        ./setup_tgenv.sh
    - id: terragrunt_command_iam
      name: run terragrunt command iam
      run: |
        terragrunt run-all "${TERRAGRUNT_RUN_ALL_COMMAND}" "${TERRAGRUNT_CLI_FLAGS}"