on:
  workflow_dispatch:
    inputs:
      terragrunt_cli_flags:
        description: terragrunt_cli_flags
        required: true
      terragrunt_command:
        description: terragrunt_command
        required: true
      terragrunt_working_dir:
        description: terragrunt_working_dir
        required: true
jobs:
  terragrunt:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTIONS_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      ALLOW_INGRESS_PUBLIC_RESTRICTED_IP_RANGES: ${{ secrets.ALLOW_INGRESS_PUBLIC_RESTRICTED_IP_RANGES }}
      GCP_BILLING_ACCOUNT_ID: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
      GCP_ORGANIZATION: ${{ secrets.GCP_ORGANIZATION }}
      GCP_ORGANIZATION_ID: ${{ secrets.GCP_ORGANIZATION_ID }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_WORKSPACE_CUSTOMER_ID: ${{ secrets.GCP_WORKSPACE_CUSTOMER_ID }}
      GCP_WORKSPACE_DOMAIN_NAME: ${{ secrets.GCP_WORKSPACE_DOMAIN_NAME }}
      GCS_TERRAFORM_REMOTE_STATE_BUCKET: ${{ secrets.GCS_TERRAFORM_REMOTE_STATE_BUCKET }}
      GCS_TERRAFORM_REMOTE_STATE_LOCATION: ${{ secrets.GCS_TERRAFORM_REMOTE_STATE_LOCATION }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
      GITHUB_OWNER: ${{ github.repository_owner }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
      GITHUB_NAME: ${{ secrets.GH_NAME }}
      GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}
      GRAFANA_AUTH: ${{ secrets.GRAFANA_AUTH }}
      GRAFANA_ORG_ID: ${{ secrets.GRAFANA_ORG_ID }}
      GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
      KUBEFLOW_USER_EMAILS: ${{ secrets.KUBEFLOW_USER_EMAILS }}
      KUBEFLOW_ADMIN_EMAILS: ${{ secrets.KUBEFLOW_ADMIN_EMAILS }}
      TERRAGRUNT_CLI_FLAGS: ${{ github.event.inputs.terragrunt_cli_flags }}
      TERRAGRUNT_COMMAND: ${{ github.event.inputs.terragrunt_command }}
      TERRAGRUNT_WORKING_DIR: ${{ github.workspace }}/${{ github.event.inputs.terragrunt_working_dir }}
      TF_INPUT: false
      TF_LOG: JSON
      TF_LOG_PATH: ${{ github.workspace }}/logs.txt
      OS: linux
      ARCH: amd64
    steps:
    - id: checkout
      name: run checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
    - id: run_event_start
      name: run event start
      run: source "${GITHUB_WORKSPACE}/bash/github/functions.sh" &&  post_slack_event "start"
    - id: run_setup_git
      name: run setup git
      run: source "${GITHUB_WORKSPACE}/bash/github/functions.sh" &&  setup_gitconfig
    - id: setup_github_path
      name: run setup github path
      run: mkdir -p "${HOME}/.local/bin" && echo "${HOME}/.local/bin" >> $GITHUB_PATH
    - id: setup_tfenv
      name: run setup tfenv
      run: source "${GITHUB_WORKSPACE}/bash/terraform/functions.sh" &&  setup_tfenv
    - id: setup_tgenv
      name: run setup tgenv
      run: source "${GITHUB_WORKSPACE}/bash/terragrunt/functions.sh" &&  setup_tgenv
    - id: setup_gcloud
      name: run setup gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
    - id: terragrunt_command
      name: run terragrunt command
      run: |
        command=(
          terragrunt
          ${TERRAGRUNT_COMMAND}
          ${TERRAGRUNT_CLI_FLAGS}
        )
        echo "command: ${command[@]}"
        "${command[@]}"
    - id: run_event_success
      name: run event success
      if: ${{ success() }}
      run: source "${GITHUB_WORKSPACE}/bash/github/functions.sh" &&  post_slack_event "success"
    - id: run_event_failure
      name: run event failure
      if: ${{ failure() }}
      run: source "${GITHUB_WORKSPACE}/bash/github/functions.sh" &&  post_slack_event "failure"
