on:
  workflow_dispatch:
    inputs:
      terragrunt_cli_flags:
        description: terragrunt_cli_flags
        required: true
      terragrunt_command:
        description: terragrunt_command
        required: true
      terragrunt_working_dir:
        description: terragrunt_working_dir
        required: true
jobs:
  terragrunt:
    runs-on: ubuntu-latest
    env:
      GCP_BILLING_ACCOUNT_ID: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
      GCP_ORGANIZATION: ${{ secrets.GCP_ORGANIZATION }}
      GCP_ORGANIZATION_ID: ${{ secrets.GCP_ORGANIZATION_ID }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_WORKSPACE_DOMAIN_NAME: ${{ secrets.GCP_WORKSPACE_DOMAIN_NAME }}
      GCS_TERRAFORM_REMOTE_STATE_BUCKET: ${{ secrets.GCS_TERRAFORM_REMOTE_STATE_BUCKET }}
      GCS_TERRAFORM_REMOTE_STATE_LOCATION: ${{ secrets.GCS_TERRAFORM_REMOTE_STATE_LOCATION }}
      GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
      GITHUB_ORGANIZATION: ${{ secrets.GH_ORGANIZATION }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_USER: ${{ secrets.GH_USER }}
    steps:
    - id: checkout
      name: run checkout
      uses: actions/checkout@v2
    - id: setup_github_path
      name: run setup github path
      run: mkdir -p "${HOME}/.local/bin" && echo "${HOME}/.local/bin" >> $GITHUB_PATH
    - id: setup_tfenv
      name: run setup tfenv
      working-directory: ./bash/terraform
      run: chmod +x ./setup_tfenv.sh && ./setup_tfenv.sh
    - id: setup_tgenv
      name: run setup tgenv
      working-directory: ./bash/terragrunt
      run: chmod +x ./setup_tgenv.sh && ./setup_tgenv.sh
    - id: setup_gcloud
      name: run setup gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
    - id: terragrunt_command
      name: run terragrunt command
      env:
        TERRAGRUNT_CLI_FLAGS: ${{toJSON(fromJSON(github.event.inputs.terragrunt_cli_flags))}}
      run: |
        terragrunt_command="${{ github.event.inputs.terragrunt_command }}"
        terragrunt_working_dir="${GITHUB_WORKSPACE}/${{ github.event.inputs.terragrunt_working_dir }}"
        terragrunt_cli_flags=$(echo "${TERRAGRUNT_CLI_FLAGS}" | jq -rc '@sh')
        echo "terragrunt_command=${terragrunt_command}"
        echo "terragrunt_working_dir=${terragrunt_working_dir}"
        echo "terragrunt_cli_flags=${terragrunt_cli_flags}"
        for terragrunt_cli_flag in ${terragrunt_cli_flags[@]}; do
          echo "${terragrunt_cli_flag}"
        done
        terragrunt "${terragrunt_command}" "${terragrunt_cli_flags[@]}" \
          "--terragrunt-working-dir ${terragrunt_working_dir}" \
          '--terragrunt-non-interactive'