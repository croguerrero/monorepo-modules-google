apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kustomizations.kustomize.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
    - ks
    singular: kustomization
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Kustomization is the Schema for the kustomizations API.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: KustomizationSpec defines the desired state of a kustomization.
            properties:
              serviceAccountName:
                type: string
                description: The name of the Kubernetes service account to impersonate
                  when reconciling this Kustomization.
              decryption:
                type: object
                description: Decrypt Kubernetes secrets before applying them on the
                  cluster.
                properties:
                  secretRef:
                    type: object
                    description: The secret name containing the private OpenPGP keys
                      used for decryption.
                    properties:
                      name:
                        type: string
                        description: Name of the referent
                    required:
                    - name
                  provider:
                    type: string
                    description: Provider is the name of the decryption engine.
                    enum:
                    - sops
                required:
                - provider
              dependsOn:
                type: array
                description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                  slice with references to Kustomization resources that must be ready
                  before this Kustomization can be reconciled.
                items:
                  type: object
                  description: CrossNamespaceDependencyReference holds the reference
                    to a dependency.
                  properties:
                    name:
                      type: string
                      description: Name holds the name reference of a dependency.
                    namespace:
                      type: string
                      description: Namespace holds the namespace reference of a dependency.
                  required:
                  - name
              force:
                type: boolean
                default: false
                description: Force instructs the controller to recreate resources
                  when patching fails due to an immutable field change.
              healthChecks:
                type: array
                description: A list of resources to be included in the health assessment.
                items:
                  type: object
                  description: NamespacedObjectKindReference contains enough information
                    to let you locate the typed referenced object in any namespace
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                    namespace:
                      type: string
                      description: Namespace of the referent, when not specified it
                        acts as LocalObjectReference
                    apiVersion:
                      type: string
                      description: API version of the referent, if not specified the
                        Kubernetes preferred version will be used
                    kind:
                      type: string
                      description: Kind of the referent
                  required:
                  - kind
                  - name
              images:
                type: array
                description: Images is a list of (image name, new name, new tag or
                  digest) for changing image names, tags or digests. This can also
                  be achieved with a patch, but this operator is simpler to specify.
                items:
                  type: object
                  description: Image contains an image name, a new name, a new tag
                    or digest, which will replace the original name and tag.
                  properties:
                    name:
                      type: string
                      description: Name is a tag-less image name.
                    digest:
                      type: string
                      description: Digest is the value used to replace the original
                        image tag. If digest is present NewTag value is ignored.
                    newName:
                      type: string
                      description: NewName is the value used to replace the original
                        name.
                    newTag:
                      type: string
                      description: NewTag is the value used to replace the original
                        tag.
                  required:
                  - name
              interval:
                type: string
                description: The interval at which to reconcile the Kustomization.
              kubeConfig:
                type: object
                description: The KubeConfig for reconciling the Kustomization on a
                  remote cluster. When specified, KubeConfig takes precedence over
                  ServiceAccountName.
                properties:
                  secretRef:
                    type: object
                    description: SecretRef holds the name to a secret that contains
                      a 'value' key with the kubeconfig file as the value. It must
                      be in the same namespace as the Kustomization. It is recommended
                      that the kubeconfig is self-contained, and the secret is regularly
                      updated if credentials such as a cloud-access-token expire.
                      Cloud specific `cmd-path` auth helpers will not function without
                      adding binaries and credentials to the Pod that is responsible
                      for reconciling the Kustomization.
                    properties:
                      name:
                        type: string
                        description: Name of the referent
                    required:
                    - name
              patchesJson6902:
                type: array
                description: JSON 6902 patches, defined as inline YAML objects.
                items:
                  type: object
                  description: JSON6902Patch contains a JSON6902 patch and the target
                    the patch should be applied to.
                  properties:
                    patch:
                      type: array
                      description: Patch contains the JSON6902 patch document with
                        an array of operation objects.
                      items:
                        type: object
                        description: JSON6902 is a JSON6902 operation object. https://tools.ietf.org/html/rfc6902#section-4
                        properties:
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                          from:
                            type: string
                          op:
                            type: string
                            enum:
                            - test
                            - remove
                            - add
                            - replace
                            - move
                            - copy
                          path:
                            type: string
                        required:
                        - op
                        - path
                    target:
                      type: object
                      description: Target points to the resources that the patch document
                        should be applied to.
                      properties:
                        name:
                          type: string
                          description: Name to match resources with.
                        namespace:
                          type: string
                          description: Namespace to select resources from.
                        kind:
                          type: string
                          description: Kind of the API Group to select resources from.
                            Together with Group and Version it is capable of unambiguously
                            identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                        annotationSelector:
                          type: string
                          description: AnnotationSelector is a string that follows
                            the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource annotations.
                        group:
                          type: string
                          description: Group is the API group to select resources
                            from. Together with Version and Kind it is capable of
                            unambiguously identifying and/or selecting resources.
                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                        labelSelector:
                          type: string
                          description: LabelSelector is a string that follows the
                            label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                            It matches with the resource labels.
                        version:
                          type: string
                          description: Version of the API Group to select resources
                            from. Together with Group and Kind it is capable of unambiguously
                            identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                  required:
                  - patch
                  - target
              patchesStrategicMerge:
                type: array
                description: Strategic merge patches, defined as inline YAML objects.
                items:
                  x-kubernetes-preserve-unknown-fields: true
              path:
                type: string
                description: Path to the directory containing the kustomization.yaml
                  file, or the set of plain YAMLs a kustomization.yaml should be generated
                  for. Defaults to 'None', which translates to the root path of the
                  SourceRef.
              postBuild:
                type: object
                description: PostBuild describes which actions to perform on the YAML
                  manifest generated by building the kustomize overlay.
                properties:
                  substitute:
                    type: object
                    additionalProperties:
                      type: string
                    description: Substitute holds a map of key/value pairs. The variables
                      defined in your YAML manifests that match any of the keys defined
                      in the map will be substituted with the set value. Includes
                      support for bash string replacement functions e.g. ${var:=default},
                      ${var:position} and ${var/substring/replacement}.
                  substituteFrom:
                    type: array
                    description: SubstituteFrom holds references to ConfigMaps and
                      Secrets containing the variables and their values to be substituted
                      in the YAML manifests. The ConfigMap and the Secret data keys
                      represent the var names and they must match the vars declared
                      in the manifests for the substitution to happen.
                    items:
                      type: object
                      description: SubstituteReference contains a reference to a resource
                        containing the variables name and value.
                      properties:
                        name:
                          type: string
                          description: Name of the values referent. Should reside
                            in the same namespace as the referring resource.
                          maxLength: 253
                          minLength: 1
                        kind:
                          type: string
                          description: Kind of the values referent, valid values are
                            ('Secret', 'ConfigMap').
                          enum:
                          - Secret
                          - ConfigMap
                      required:
                      - kind
                      - name
              prune:
                type: boolean
                description: Prune enables garbage collection.
              retryInterval:
                type: string
                description: The interval at which to retry a previously failed reconciliation.
                  When not specified, the controller uses the KustomizationSpec.Interval
                  value to retry failures.
              sourceRef:
                type: object
                description: Reference of the source where the kustomization file
                  is.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                  namespace:
                    type: string
                    description: Namespace of the referent, defaults to the Kustomization
                      namespace
                  apiVersion:
                    type: string
                    description: API version of the referent
                  kind:
                    type: string
                    description: Kind of the referent
                    enum:
                    - GitRepository
                    - Bucket
                required:
                - kind
                - name
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  kustomize executions, it does not apply to already started executions.
                  Defaults to false.
              targetNamespace:
                type: string
                description: TargetNamespace sets or overrides the namespace in the
                  kustomization.yaml file.
                maxLength: 63
                minLength: 1
              timeout:
                type: string
                description: Timeout for validation, apply and health checking operations.
                  Defaults to 'Interval' duration.
              validation:
                type: string
                description: Validate the Kubernetes objects before applying them
                  on the cluster. The validation strategy can be 'client' (local dry-run),
                  'server' (APIServer dry-run) or 'none'. When 'Force' is 'true',
                  validation will fallback to 'client' if set to 'server' because
                  server-side validation is not supported in this scenario.
                enum:
                - none
                - client
                - server
            required:
            - interval
            - prune
            - sourceRef
          status:
            type: object
            description: KustomizationStatus defines the observed state of a kustomization.
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              lastAppliedRevision:
                type: string
                description: The last successfully applied revision. The revision
                  format for Git sources is <branch|tag>/<commit-sha>.
              lastAttemptedRevision:
                type: string
                description: LastAttemptedRevision is the revision of the last reconciliation
                  attempt.
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last reconciled generation.
                format: int64
              snapshot:
                type: object
                description: The last successfully applied revision metadata.
                properties:
                  checksum:
                    type: string
                    description: The manifests sha1 checksum.
                  entries:
                    type: array
                    description: A list of Kubernetes kinds grouped by namespace.
                    items:
                      type: object
                      description: Snapshot holds the metadata of namespaced Kubernetes
                        objects
                      properties:
                        namespace:
                          type: string
                          description: The namespace of this entry.
                        kinds:
                          type: object
                          additionalProperties:
                            type: string
                          description: The list of Kubernetes kinds.
                      required:
                      - kinds
                required:
                - checksum
                - entries
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kustomize-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kustomize-controller
  labels:
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kustomize-controller
  template:
    metadata:
      labels:
        app: kustomize-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: kustomize-controller
      containers:
      - name: manager
        image: fluxcd/kustomize-controller:v0.9.3
        args:
        - --events-addr=http://notification-controller/
        - --watch-all-namespaces
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        ports:
        - name: http-prom
          containerPort: 8080
        - name: healthz
          protocol: TCP
          containerPort: 9440
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: temp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: healthz
            path: /healthz
        readinessProbe:
          httpGet:
            port: healthz
            path: /readyz
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: temp
        emptyDir: {}
      securityContext:
        fsGroup: 1337
