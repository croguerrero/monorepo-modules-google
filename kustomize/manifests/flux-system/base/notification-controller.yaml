apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: alerts.notification.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Alert
    listKind: AlertList
    plural: alerts
    singular: alert
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Alert is the Schema for the alerts API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: AlertSpec defines an alerting rule for events involving a
              list of objects
            properties:
              eventSeverity:
                type: string
                default: info
                description: Filter events based on severity, defaults to ('info').
                  If set to 'info' no events will be filtered.
                enum:
                - info
                - error
              eventSources:
                type: array
                description: Filter events based on the involved objects.
                items:
                  type: object
                  description: CrossNamespaceObjectReference contains enough information
                    to let you locate the typed referenced object at cluster level
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                      maxLength: 53
                      minLength: 1
                    namespace:
                      type: string
                      description: Namespace of the referent
                      maxLength: 53
                      minLength: 1
                    apiVersion:
                      type: string
                      description: API version of the referent
                    kind:
                      type: string
                      description: Kind of the referent
                      enum:
                      - Bucket
                      - GitRepository
                      - Kustomization
                      - HelmRelease
                      - HelmChart
                      - HelmRepository
                      - ImageRepository
                      - ImagePolicy
                      - ImageUpdateAutomation
                  required:
                  - name
              exclusionList:
                type: array
                description: A list of Golang regular expressions to be used for excluding
                  messages.
                items:
                  type: string
              providerRef:
                type: object
                description: Send events using this provider.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              summary:
                type: string
                description: Short description of the impact and affected cluster.
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  events dispatching. Defaults to false.
            required:
            - eventSources
            - providerRef
          status:
            type: object
            description: AlertStatus defines the observed state of Alert
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: providers.notification.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Provider is the Schema for the providers API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: ProviderSpec defines the desired state of Provider
            properties:
              type:
                type: string
                description: Type of provider
                enum:
                - slack
                - discord
                - msteams
                - rocket
                - generic
                - github
                - gitlab
                - bitbucket
                - azuredevops
                - googlechat
              secretRef:
                type: object
                description: Secret reference containing the provider webhook URL
                  using "address" as data key
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              address:
                type: string
                description: HTTP/S webhook address of this provider
                pattern: ^(http|https)://
              channel:
                type: string
                description: Alert channel for this provider
              proxy:
                type: string
                description: HTTP/S address of the proxy
                pattern: ^(http|https)://
              username:
                type: string
                description: Bot username for this provider
            required:
            - type
          status:
            type: object
            description: ProviderStatus defines the observed state of Provider
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: receivers.notification.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Receiver
    listKind: ReceiverList
    plural: receivers
    singular: receiver
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Receiver is the Schema for the receivers API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: ReceiverSpec defines the desired state of Receiver
            properties:
              type:
                type: string
                description: Type of webhook sender, used to determine the validation
                  procedure and payload deserialization.
                enum:
                - generic
                - generic-hmac
                - github
                - gitlab
                - bitbucket
                - harbor
                - dockerhub
                - quay
                - gcr
                - nexus
                - acr
              resources:
                type: array
                description: A list of resources to be notified about changes.
                items:
                  type: object
                  description: CrossNamespaceObjectReference contains enough information
                    to let you locate the typed referenced object at cluster level
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                      maxLength: 53
                      minLength: 1
                    namespace:
                      type: string
                      description: Namespace of the referent
                      maxLength: 53
                      minLength: 1
                    apiVersion:
                      type: string
                      description: API version of the referent
                    kind:
                      type: string
                      description: Kind of the referent
                      enum:
                      - Bucket
                      - GitRepository
                      - Kustomization
                      - HelmRelease
                      - HelmChart
                      - HelmRepository
                      - ImageRepository
                      - ImagePolicy
                      - ImageUpdateAutomation
                  required:
                  - name
              secretRef:
                type: object
                description: Secret reference containing the token used to validate
                  the payload authenticity
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              events:
                type: array
                description: A list of events to handle, e.g. 'push' for GitHub or
                  'Push Hook' for GitLab.
                items:
                  type: string
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  events handling. Defaults to false.
            required:
            - resources
            - type
          status:
            type: object
            description: ReceiverStatus defines the observed state of Receiver
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              url:
                type: string
                description: Generated webhook URL in the format of '/hook/sha256sum(token+name+namespace)'.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notification-controller
---
apiVersion: v1
kind: Service
metadata:
  name: notification-controller
  labels:
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: notification-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-receiver
  labels:
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: notification-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-controller
  labels:
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-controller
  template:
    metadata:
      labels:
        app: notification-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: notification-controller
      containers:
      - name: manager
        image: fluxcd/notification-controller:v0.10.0
        args:
        - --watch-all-namespaces
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        ports:
        - name: http
          containerPort: 9090
        - name: http-webhook
          containerPort: 9292
        - name: http-prom
          containerPort: 8080
        - name: healthz
          protocol: TCP
          containerPort: 9440
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: temp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: healthz
            path: /healthz
        readinessProbe:
          httpGet:
            port: healthz
            path: /readyz
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: temp
        emptyDir: {}
