apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: buckets.source.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Bucket is the Schema for the buckets API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: BucketSpec defines the desired state of an S3 compatible
              bucket
            properties:
              secretRef:
                type: object
                description: The name of the secret containing authentication credentials
                  for the Bucket.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              bucketName:
                type: string
                description: The bucket name.
              endpoint:
                type: string
                description: The bucket endpoint address.
              ignore:
                type: string
                description: Ignore overrides the set of excluded patterns in the
                  .sourceignore format (which is the same as .gitignore). If not provided,
                  a default will be used, consult the documentation for your version
                  to find out what those are.
              insecure:
                type: boolean
                description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
              interval:
                type: string
                description: The interval at which to check for bucket updates.
              provider:
                type: string
                default: generic
                description: The S3 compatible storage provider name, default ('generic').
                enum:
                - generic
                - aws
              region:
                type: string
                description: The bucket region.
              suspend:
                type: boolean
                description: This flag tells the controller to suspend the reconciliation
                  of this source.
              timeout:
                type: string
                default: 20s
                description: The timeout for download operations, defaults to 20s.
            required:
            - bucketName
            - endpoint
            - interval
          status:
            type: object
            description: BucketStatus defines the observed state of a bucket
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  Bucket sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the Bucket.
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the artifact output of the
                  last Bucket sync.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: gitrepositories.source.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    singular: gitrepository
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: GitRepository is the Schema for the gitrepositories API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: GitRepositorySpec defines the desired state of a Git repository.
            properties:
              secretRef:
                type: object
                description: The secret name containing the Git credentials. For HTTPS
                  repositories the secret must contain username and password fields.
                  For SSH repositories the secret must contain identity, identity.pub
                  and known_hosts fields.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              gitImplementation:
                type: string
                default: go-git
                description: Determines which git client library to use. Defaults
                  to go-git, valid values are ('go-git', 'libgit2').
                enum:
                - go-git
                - libgit2
              ignore:
                type: string
                description: Ignore overrides the set of excluded patterns in the
                  .sourceignore format (which is the same as .gitignore). If not provided,
                  a default will be used, consult the documentation for your version
                  to find out what those are.
              interval:
                type: string
                description: The interval at which to check for repository updates.
              ref:
                type: object
                description: The Git reference to checkout and monitor for changes,
                  defaults to master branch.
                properties:
                  branch:
                    type: string
                    default: master
                    description: The Git branch to checkout, defaults to master.
                  commit:
                    type: string
                    description: The Git commit SHA to checkout, if specified Tag
                      filters will be ignored.
                  semver:
                    type: string
                    description: The Git tag semver expression, takes precedence over
                      Tag.
                  tag:
                    type: string
                    description: The Git tag to checkout, takes precedence over Branch.
              suspend:
                type: boolean
                description: This flag tells the controller to suspend the reconciliation
                  of this source.
              timeout:
                type: string
                default: 20s
                description: The timeout for remote Git operations like cloning, defaults
                  to 20s.
              url:
                type: string
                description: The repository URL, can be a HTTP/S or SSH address.
                pattern: ^(http|https|ssh)://
              verify:
                type: object
                description: Verify OpenPGP signature for the Git commit HEAD points
                  to.
                properties:
                  secretRef:
                    type: object
                    description: The secret name containing the public keys of all
                      trusted Git authors.
                    properties:
                      name:
                        type: string
                        description: Name of the referent
                    required:
                    - name
                  mode:
                    type: string
                    description: Mode describes what git object should be verified,
                      currently ('head').
                    enum:
                    - head
                required:
                - mode
            required:
            - interval
            - url
          status:
            type: object
            description: GitRepositoryStatus defines the observed state of a Git repository.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  repository sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the GitRepository.
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the artifact output of the
                  last repository sync.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: helmcharts.source.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmChart
    listKind: HelmChartList
    plural: helmcharts
    singular: helmchart
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Chart
      type: string
      jsonPath: .spec.chart
    - name: Version
      type: string
      jsonPath: .spec.version
    - name: Source Kind
      type: string
      jsonPath: .spec.sourceRef.kind
    - name: Source Name
      type: string
      jsonPath: .spec.sourceRef.name
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: HelmChart is the Schema for the helmcharts API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: HelmChartSpec defines the desired state of a Helm chart.
            properties:
              chart:
                type: string
                description: The name or path the Helm chart is available at in the
                  SourceRef.
              interval:
                type: string
                description: The interval at which to check the Source for updates.
              sourceRef:
                type: object
                description: The reference to the Source the chart is available at.
                properties:
                  name:
                    type: string
                    description: Name of the referent.
                  apiVersion:
                    type: string
                    description: APIVersion of the referent.
                  kind:
                    type: string
                    description: Kind of the referent, valid values are ('HelmRepository',
                      'GitRepository', 'Bucket').
                    enum:
                    - HelmRepository
                    - GitRepository
                    - Bucket
                required:
                - kind
                - name
              suspend:
                type: boolean
                description: This flag tells the controller to suspend the reconciliation
                  of this source.
              valuesFile:
                type: string
                description: Alternative values file to use as the default chart values,
                  expected to be a relative path in the SourceRef. Ignored when omitted.
              version:
                type: string
                default: '*'
                description: The chart version semver expression, ignored for charts
                  from GitRepository and Bucket sources. Defaults to latest when omitted.
            required:
            - chart
            - interval
            - sourceRef
          status:
            type: object
            description: HelmChartStatus defines the observed state of the HelmChart.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  chart sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the HelmChart.
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the last chart pulled.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: helmrepositories.source.toolkit.fluxcd.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    singular: helmrepository
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: HelmRepository is the Schema for the helmrepositories API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: HelmRepositorySpec defines the reference to a Helm repository.
            properties:
              secretRef:
                type: object
                description: The name of the secret containing authentication credentials
                  for the Helm repository. For HTTP/S basic auth the secret must contain
                  username and password fields. For TLS the secret must contain a
                  certFile and keyFile, and/or caCert fields.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                required:
                - name
              interval:
                type: string
                description: The interval at which to check the upstream for updates.
              suspend:
                type: boolean
                description: This flag tells the controller to suspend the reconciliation
                  of this source.
              timeout:
                type: string
                default: 60s
                description: The timeout of index downloading, defaults to 60s.
              url:
                type: string
                description: The Helm repository URL, a valid URL contains at least
                  a protocol and host.
            required:
            - interval
            - url
          status:
            type: object
            description: HelmRepositoryStatus defines the observed state of the HelmRepository.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  repository sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the HelmRepository.
                items:
                  type: object
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    type:
                      type: string
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    status:
                      type: string
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    lastTransitionTime:
                      type: string
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                    message:
                      type: string
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                    observedGeneration:
                      type: integer
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                    reason:
                      type: string
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the last index fetched.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: source-controller
---
apiVersion: v1
kind: Service
metadata:
  name: source-controller
  labels:
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: source-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: source-controller
  labels:
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-controller
  template:
    metadata:
      labels:
        app: source-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: source-controller
      containers:
      - name: manager
        image: fluxcd/source-controller:v0.9.1
        args:
        - --events-addr=http://notification-controller/
        - --watch-all-namespaces
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        - --storage-path=/data
        - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
        ports:
        - name: http
          containerPort: 9090
        - name: http-prom
          containerPort: 8080
        - name: healthz
          containerPort: 9440
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: healthz
            path: /healthz
        readinessProbe:
          httpGet:
            port: http
            path: /
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: data
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1337
  strategy:
    type: Recreate
