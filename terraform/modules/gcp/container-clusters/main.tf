module "container-clusters" {
  for_each                              = local.container_clusters_map
  source                                = "github.com/terraform-google-modules/terraform-google-kubernetes-engine.git//modules/beta-private-cluster?ref=v14.0.0"
  project_id                            = each.value["project_id"]
  name                                  = each.value["name"]
  description                           = each.value["description"]
  regional                              = each.value["regional"]
  region                                = each.value["region"]
  zones                                 = each.value["zones"]
  network                               = each.value["network"]
  network_project_id                    = each.value["network_project_id"]
  subnetwork                            = each.value["subnetwork"]
  kubernetes_version                    = each.value["kubernetes_version"]
  master_authorized_networks            = each.value["master_authorized_networks"]
  enable_vertical_pod_autoscaling       = each.value["enable_vertical_pod_autoscaling"]
  horizontal_pod_autoscaling            = each.value["horizontal_pod_autoscaling"]
  http_load_balancing                   = each.value["http_load_balancing"]
  network_policy                        = each.value["network_policy"]
  network_policy_provider               = each.value["network_policy_provider"]
  datapath_provider                     = each.value["datapath_provider"]
  maintenance_exclusions                = each.value["maintenance_exclusions"]
  maintenance_start_time                = each.value["maintenance_start_time"]
  maintenance_end_time                  = each.value["maintenance_end_time"]
  maintenance_recurrence                = each.value["maintenance_recurrence"]
  ip_range_pods                         = each.value["ip_range_pods"]
  ip_range_services                     = each.value["ip_range_services"]
  initial_node_count                    = each.value["initial_node_count"]
  default_node_pool                     = each.value["default_node_pool"]
  disable_legacy_metadata_endpoints     = each.value["disable_legacy_metadata_endpoints"]
  node_pools                            = each.value["node_pools"]
  node_pools_labels                     = each.value["node_pools_labels"]
  node_pools_metadata                   = each.value["node_pools_metadata"]
  node_pools_linux_node_configs_sysctls = each.value["node_pools_linux_node_configs_sysctls"]
  resource_usage_export_dataset_id      = each.value["resource_usage_export_dataset_id"]
  enable_network_egress_export          = each.value["enable_network_egress_export"]
  enable_resource_consumption_export    = each.value["enable_resource_consumption_export"]
  enable_kubernetes_alpha               = each.value["enable_kubernetes_alpha"]
  cluster_autoscaling                   = each.value["cluster_autoscaling"]
  node_pools_taints                     = each.value["node_pools_taints"]
  node_pools_tags                       = each.value["node_pools_tags"]
  node_pools_oauth_scopes               = each.value["node_pools_oauth_scopes"]
  stub_domains                          = each.value["stub_domains"]
  upstream_nameservers                  = each.value["upstream_nameservers"]
  non_masquerade_cidrs                  = each.value["non_masquerade_cidrs"]
  ip_masq_resync_interval               = each.value["ip_masq_resync_interval"]
  ip_masq_link_local                    = each.value["ip_masq_link_local"]
  configure_ip_masq                     = each.value["configure_ip_masq"]
  cluster_telemetry_type                = each.value["cluster_telemetry_type"]
  logging_service                       = each.value["logging_service"]
  monitoring_service                    = each.value["monitoring_service"]
  create_service_account                = each.value["create_service_account"]
  grant_registry_access                 = each.value["grant_registry_access"]
  registry_project_ids                  = each.value["registry_project_ids"]
  service_account                       = each.value["service_account"]
  basic_auth_username                   = each.value["basic_auth_username"]
  basic_auth_password                   = each.value["basic_auth_password"]
  issue_client_certificate              = each.value["issue_client_certificate"]
  cluster_ipv4_cidr                     = each.value["cluster_ipv4_cidr"]
  cluster_resource_labels               = each.value["cluster_resource_labels"]
  skip_provisioners                     = each.value["skip_provisioners"]
  default_max_pods_per_node             = each.value["default_max_pods_per_node"]
  deploy_using_private_endpoint         = each.value["deploy_using_private_endpoint"]
  enable_private_endpoint               = each.value["enable_private_endpoint"]
  enable_private_nodes                  = each.value["enable_private_nodes"]
  master_ipv4_cidr_block                = each.value["master_ipv4_cidr_block"]
  master_global_access_enabled          = each.value["master_global_access_enabled"]
  istio                                 = each.value["istio"]
  istio_auth                            = each.value["istio_auth"]
  dns_cache                             = each.value["dns_cache"]
  gce_pd_csi_driver                     = each.value["gce_pd_csi_driver"]
  kalm_config                           = each.value["kalm_config"]
  config_connector                      = each.value["config_connector"]
  cloudrun                              = each.value["cloudrun"]
  cloudrun_load_balancer_type           = each.value["cloudrun_load_balancer_type"]
  enable_pod_security_policy            = each.value["enable_pod_security_policy"]
  sandbox_enabled                       = each.value["sandbox_enabled"]
  enable_intranode_visibility           = each.value["enable_intranode_visibility"]
  authenticator_security_group          = each.value["authenticator_security_group"]
  node_metadata                         = each.value["node_metadata"]
  database_encryption                   = each.value["database_encryption"]
  identity_namespace                    = each.value["identity_namespace"]
  release_channel                       = each.value["release_channel"]
  enable_shielded_nodes                 = each.value["enable_shielded_nodes"]
  enable_binary_authorization           = each.value["enable_binary_authorization"]
  add_cluster_firewall_rules            = each.value["add_cluster_firewall_rules"]
  firewall_priority                     = each.value["firewall_priority"]
  firewall_inbound_ports                = each.value["firewall_inbound_ports"]
  gcloud_upgrade                        = each.value["gcloud_upgrade"]
  add_shadow_firewall_rules             = each.value["add_shadow_firewall_rules"]
  shadow_firewall_rules_priority        = each.value["shadow_firewall_rules_priority"]
  disable_default_snat                  = each.value["disable_default_snat"]
  impersonate_service_account           = each.value["impersonate_service_account"]
  notification_config_topic             = each.value["notification_config_topic"]
  enable_tpu                            = each.value["enable_tpu"]
}

module "container-cluster-auths" {
  for_each     = module.container-clusters
  source       = "github.com/terraform-google-modules/terraform-google-kubernetes-engine.git//modules/auth?ref=v14.0.0"
  project_id   = each.value["project_id"]
  cluster_name = each.value["name"]
  location     = each.value["region"]
}

locals {
  container_clusters_map = {
    for container_cluster in var.container_clusters :
    container_cluster["name"] => container_cluster
  }
}