variable "container_clusters" {
  type = list(object({
    project_id                            = string
    name                                  = string
    description                           = string
    regional                              = bool
    region                                = string
    zones                                 = list(string)
    network                               = string
    network_project_id                    = string
    subnetwork                            = string
    kubernetes_version                    = string
    master_authorized_networks            = list(object({ cidr_block = string, display_name = string }))
    enable_vertical_pod_autoscaling       = bool
    horizontal_pod_autoscaling            = bool
    http_load_balancing                   = bool
    network_policy                        = bool
    network_policy_provider               = string
    datapath_provider                     = string
    maintenance_exclusions                = list(object({ name = string, start_time = string, end_time = string }))
    maintenance_start_time                = string
    maintenance_end_time                  = string
    maintenance_recurrence                = string
    ip_range_pods                         = string
    ip_range_services                     = string
    initial_node_count                    = number
    remove_default_node_pool              = bool
    disable_legacy_metadata_endpoints     = bool
    node_pools                            = list(map(string))
    node_pools_labels                     = map(map(string))
    node_pools_metadata                   = map(map(string))
    node_pools_linux_node_configs_sysctls = map(map(string))
    resource_usage_export_dataset_id      = string
    enable_network_egress_export          = bool
    enable_resource_consumption_export    = bool
    enable_kubernetes_alpha               = bool
    cluster_autoscaling = object({
      enabled             = bool
      autoscaling_profile = string
      min_cpu_cores       = number
      max_cpu_cores       = number
      min_memory_gb       = number
      max_memory_gb       = number
    })
    node_pools_taints              = map(list(object({ key = string, value = string, effect = string })))
    node_pools_tags                = map(list(string))
    node_pools_oauth_scopes        = map(list(string))
    stub_domains                   = map(list(string))
    upstream_nameservers           = list(string)
    non_masquerade_cidrs           = list(string)
    ip_masq_resync_interval        = string
    ip_masq_link_local             = bool
    configure_ip_masq              = bool
    cluster_telemetry_type         = string
    logging_service                = string
    monitoring_service             = string
    create_service_account         = bool
    grant_registry_access          = bool
    registry_project_ids           = list(string)
    service_account                = string
    basic_auth_username            = string
    basic_auth_password            = string
    issue_client_certificate       = bool
    cluster_ipv4_cidr              = string
    cluster_resource_labels        = map(string)
    skip_provisioners              = bool
    default_max_pods_per_node      = number
    deploy_using_private_endpoint  = bool
    enable_private_endpoint        = bool
    enable_private_nodes           = bool
    master_ipv4_cidr_block         = string
    master_global_access_enabled   = bool
    istio                          = bool
    istio_auth                     = string
    dns_cache                      = bool
    gce_pd_csi_driver              = bool
    kalm_config                    = bool
    config_connector               = bool
    cloudrun                       = bool
    cloudrun_load_balancer_type    = string
    enable_pod_security_policy     = bool
    sandbox_enabled                = bool
    enable_intranode_visibility    = bool
    authenticator_security_group   = string
    node_metadata                  = string
    database_encryption            = list(object({ state = string, key_name = string }))
    identity_namespace             = string
    release_channel                = string
    enable_shielded_nodes          = bool
    enable_binary_authorization    = bool
    add_cluster_firewall_rules     = bool
    firewall_priority              = number
    firewall_inbound_ports         = list(string)
    gcloud_upgrade                 = bool
    add_shadow_firewall_rules      = bool
    shadow_firewall_rules_priority = number
    disable_default_snat           = bool
    impersonate_service_account    = string
    notification_config_topic      = string
    enable_tpu                     = bool
  }))
}